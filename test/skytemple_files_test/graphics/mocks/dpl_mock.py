#  Copyright 2020-2023 Capypara and the SkyTemple Contributors
#
#  This file is part of SkyTemple.
#
#  SkyTemple is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  SkyTemple is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with SkyTemple.  If not, see <https://www.gnu.org/licenses/>.
#
from __future__ import annotations

from typing import Sequence, Optional

from skytemple_files.graphics.dpl.protocol import DplProtocol


class DplMock(DplProtocol):
    palettes: Sequence[Sequence[int]]

    def __init__(self, data: bytes, *, palettes:Optional[Sequence[Sequence[int]]] = None):
        if palettes is None:
            raise NotImplementedError("Not implemented for mock.")
        self.palettes = palettes

    @classmethod
    def make_for_tileset_one(cls) -> DplMock:
        # fmt: off
        return cls(bytes(), palettes=[[111, 0, 0, 223, 103, 0, 223, 151, 7, 199, 0, 71, 183, 15, 79, 207, 71, 119, 223, 135, 159, 0, 87, 47, 7, 119, 63, 47, 159, 87, 87, 191, 103, 63, 127, 0, 79, 151, 0, 103, 167, 0, 127, 183, 0, 151, 207, 0], [111, 0, 0, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 167, 95, 0, 199, 119, 15, 215, 135, 39, 223, 159, 55, 175, 127, 15, 111, 119, 0, 63, 127, 0, 79, 151, 0, 103, 167, 0, 127, 183, 0, 151, 207, 0], [0, 255, 0, 159, 55, 0, 231, 111, 0, 255, 159, 15, 143, 111, 191, 207, 175, 239, 247, 215, 255, 223, 135, 0, 247, 215, 0, 255, 255, 0, 0, 111, 0, 0, 167, 0, 39, 183, 0, 71, 207, 0, 111, 231, 0, 143, 255, 0], [111, 0, 0, 31, 103, 47, 47, 127, 47, 63, 159, 47, 79, 183, 47, 103, 215, 47, 119, 239, 47, 135, 255, 47, 95, 23, 0, 119, 47, 0, 143, 71, 0, 63, 127, 0, 79, 151, 0, 103, 167, 0, 127, 183, 0, 151, 207, 0], [111, 0, 0, 31, 103, 47, 47, 127, 47, 63, 159, 47, 79, 183, 47, 103, 215, 47, 183, 15, 79, 207, 71, 119, 223, 135, 159, 95, 23, 0, 119, 47, 0, 143, 71, 0, 63, 127, 0, 79, 151, 0, 103, 167, 0, 127, 183, 0], [101, 101, 255, 31, 103, 47, 47, 127, 47, 63, 159, 47, 79, 183, 47, 103, 215, 47, 119, 239, 47, 135, 255, 47, 95, 23, 0, 119, 47, 0, 143, 71, 0, 0, 167, 0, 39, 183, 0, 71, 207, 0, 111, 231, 0, 143, 255, 0], [111, 0, 0, 31, 103, 47, 47, 127, 47, 63, 159, 47, 79, 183, 47, 103, 215, 47, 119, 239, 47, 135, 255, 47, 95, 23, 0, 119, 47, 0, 143, 71, 0, 207, 71, 0, 215, 111, 0, 223, 151, 7, 223, 47, 223, 223, 47, 223], [111, 0, 0, 31, 103, 47, 47, 127, 47, 63, 159, 47, 79, 183, 47, 103, 215, 47, 119, 239, 47, 135, 255, 47, 95, 23, 0, 119, 47, 0, 143, 71, 0, 183, 15, 79, 207, 71, 119, 223, 135, 159, 0, 167, 223, 0, 167, 223], [223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223], [223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223, 223, 47, 223], [255, 243, 0, 0, 7, 167, 0, 47, 175, 0, 79, 175, 0, 119, 183, 0, 151, 191, 31, 31, 95, 79, 47, 0, 111, 63, 15, 135, 95, 15, 127, 151, 207, 135, 167, 215, 143, 183, 223, 39, 183, 0, 71, 207, 0, 111, 231, 0], [255, 243, 0, 87, 111, 119, 127, 143, 151, 159, 175, 175, 199, 207, 207, 215, 223, 223, 239, 239, 239, 47, 95, 175, 79, 127, 215, 127, 175, 239, 183, 223, 255, 199, 238, 255, 23, 63, 135, 39, 183, 0, 71, 207, 0, 111, 231, 0]])
        # fmt: on

    @classmethod
    def make_for_dungeon_bg_one(cls) -> DplMock:
        # fmt: off
        return cls(bytes(), palettes=[[207, 135, 55, 103, 103, 79, 127, 135, 63, 159, 167, 87, 199, 199, 127, 79, 167, 223, 95, 183, 239, 111, 151, 175, 143, 175, 191, 167, 191, 199, 175, 199, 207, 183, 215, 215, 207, 239, 223, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 55, 79, 47, 79, 87, 0, 95, 103, 39, 127, 135, 63, 159, 167, 87, 207, 215, 135, 111, 135, 95, 111, 151, 175, 143, 175, 191, 167, 191, 199, 175, 199, 207, 183, 215, 215, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 55, 79, 47, 79, 87, 0, 95, 103, 39, 127, 135, 63, 159, 167, 87, 207, 215, 135, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255], [255, 79, 255, 7, 151, 183, 39, 159, 215, 39, 183, 239, 47, 207, 231, 79, 111, 151, 79, 127, 191, 103, 151, 199, 111, 151, 175, 143, 175, 191, 175, 199, 207, 183, 215, 215, 255, 79, 255, 135, 215, 231, 167, 239, 255, 223, 255, 255], [255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255, 255, 79, 255]])
        # fmt: on
